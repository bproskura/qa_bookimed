name: Bookimed tests
on:
  schedule:
    - cron: "0 17 * * 6"
  workflow_dispatch:

jobs:
  test:
    name: Test
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
      - name: Notify Slack on test start
        if: always()
        uses: act10ns/slack@v1
        with:
          webhook-url: ${{ secrets.SLACK_WEBHOOK }}
          status: starting
          channel: 'automation_result'
          message: |
            _Starting API Tests..._ 
            *Workflow URL:* https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}

      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Ensure browsers are installed
        run: python -m playwright install --with-deps

      - name: Run tests and generate Allure report
        run: |
          pytest --alluredir allure-results --headless=True
          python -m allure generate allure-results -o allure-report --clean

      - name: Upload Allure report
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: allure-report
          path: allure-report

      - name: Notify Slack on test completion
        if: always()
        uses: act10ns/slack@v2.0.0
        with:
          webhook-url: ${{ secrets.SLACK_WEBHOOK }}
          status: ${{ job.status }}
          channel: 'automation_result'
          message: |
            ${{ job.status == 'success' && '_Tests passed successfully_' || '_Tests failed_' }}
            *Workflow URL:* https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}

  deploy:
    name: Deploy to GitHub Pages
    if: always()
    runs-on: ubuntu-latest
    needs: test

    permissions:
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Download Allure report artifact
        uses: actions/download-artifact@v2
        with:
          name: allure-report
          path: ./allure-report

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          artifact_dir: ./allure-report
